services: 

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    restart: unless-stopped
    env_file:
      - ./docker/influx/influxdb.env # ToDo: Replace pwd and token when deploying
    ports:
      - 8086:8086
    volumes:
      - influxdb-config:/etc/influxdb2
      - influxdb-storage:/var/lib/influxdb2
  
  grafana:
    image: grafana/grafana-enterprise:latest
    container_name: grafana
    depends_on:
      - influxdb
    restart: unless-stopped
    environment:
      # Server Settings
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_USERS_ALLOW_SIGN_UP=false
      # Reverse Proxy Settings
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      # Dashboard Settings
      - GF_DASHBOARDS_MIN_REFRESH_INTERVAL=12h
      # ToDo: Email or Alert Settings
    volumes:
      # Initialize grafana
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources/
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards/
      # Store data
      - grafana-storage:/var/lib/grafana
  
  postgres: 
    image: postgres:latest
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres" # ToDo: Change for production deployment
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U uptrace -d uptrace']
      interval: 1s
      timeout: 1s
      retries: 30
    volumes:
      - ./docker/postgres/postgres.sql:/docker-entrypoint-initdb.d/postgres.sql
      - postgres-storage:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: moryx@demo.org
      PGADMIN_DEFAULT_PASSWORD: postgres # ToDo: Change for production deployment
    depends_on:
      - postgres

  moryx:
    build:
      context: .
      dockerfile: ./src/StartProject.Asp/Dockerfile
    container_name: moryx-demo
    entrypoint: ["/app/StartProject.Asp/StartProject.Asp"]
    restart: unless-stopped
    volumes:
      - moryx-config:/app/Config
      - moryx-logs:/app/Logs
    depends_on:
      - influxdb
      - postgres

  #identity:
  #  image: moryx/moryx-identity-demo:latest
  #  container_name: identity
  #  restart: unless-stopped
  #  entrypoint: ["app/Moryx.Identity.IdentityServer/Moryx.Identity.IdentityServer"]
  #  depends_on:
  #    - postgres

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./docker/nginx/certs:/etc/nginx/certs
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - grafana
      - influxdb
      - pgadmin
      - moryx

  otel-collector:
    image: otel/opentelemetry-collector:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"  # OTLP gRPC receiver
      - "55681:55681"  # OTLP HTTP receiver

  aspire:
    image: dotnet/aspire-dashboard:latest
    expose:
      - 18888
      - 18889
    ports:
      - 18888:18888
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:18888"] # Adjust endpoint as needed
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - postgres

volumes:
  grafana-storage:
  influxdb-config:
  influxdb-storage:
  postgres-storage:
  moryx-logs:
  moryx-config:

secrets:
  nuget_config:
    file: ~/.config/NuGet/NuGet.Config